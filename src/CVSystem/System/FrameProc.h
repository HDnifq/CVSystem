#pragma once
#include "CameraImage.h"

namespace dxlib {

///-------------------------------------------------------------------------------------------------
/// <summary> 画面帧处理接口对象. </summary>
///
/// <remarks> Surface, 2018/11/16. </remarks>
///-------------------------------------------------------------------------------------------------
class FrameProc
{
  public:
    virtual ~FrameProc(){};

    ///-------------------------------------------------------------------------------------------------
    /// <summary>
    /// 处理函数接口,返回值作为一个key值,如果没有按下按键,那么这里返回-
    /// 1(和waitkey()的无按键返回值相同).
    /// </summary>
    ///
    /// <remarks> Dx, 2019/3/19. </remarks>
    ///
    /// <param name="camImage"> 采集的处理图像. </param>
    /// <param name="key">      [in,out]这里waitkey()得到的key值. </param>
    ///-------------------------------------------------------------------------------------------------
    virtual void process(pCameraImage camImage, int& key) = 0;

    ///-------------------------------------------------------------------------------------------------
    /// <summary>
    /// 浅睡眠,此时相机没有抓图,没有采图.但是会定时300ms传出这个事件来可以执行一些函数.
    /// </summary>
    ///
    /// <remarks> Dx, 2019/4/14. </remarks>
    ///
    /// <param name="key"> [in,out] The key. </param>
    ///-------------------------------------------------------------------------------------------------
    virtual void onLightSleep(int& key) {}

    ///-------------------------------------------------------------------------------------------------
    /// <summary> 被使能的时候的响应. </summary>
    ///
    /// <remarks> Xian Dai, 2018/10/18. </remarks>
    ///-------------------------------------------------------------------------------------------------
    virtual void onEnable() = 0;

    ///-------------------------------------------------------------------------------------------------
    /// <summary> 不使能的时候的响应. </summary>
    ///
    /// <remarks> Xian Dai, 2018/9/28. </remarks>
    ///-------------------------------------------------------------------------------------------------
    virtual void onDisable() = 0;

    ///-------------------------------------------------------------------------------------------------
    /// <summary> 当前proc的标示名. </summary>
    ///
    /// <remarks> Dx, 2019/3/19. </remarks>
    ///
    /// <returns> 当前proc的标示名. </returns>
    ///-------------------------------------------------------------------------------------------------
    virtual const char* name()
    {
        return "unmanned proc";
    }
};
typedef std::shared_ptr<FrameProc> pFrameProc;
} // namespace dxlib